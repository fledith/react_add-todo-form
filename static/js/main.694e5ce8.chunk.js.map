{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","checkKey","maxId","sort","a","b","i","every","console","log","App","useState","setTitle","setUserId","errorTitle","setErrorTitle","errorUser","setErrorUser","setCompleted","onSubmit","event","preventDefault","trim","newTodo","push","addTodo","type","value","placeholder","onChange","valueWithRules","target","replace","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.694e5ce8.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../type/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'box notification',\n        {\n          'is-success': completed,\n          'is-danger': !completed,\n        },\n      )}\n    >\n      <h2 className=\"title is-5\">\n        {title}\n      </h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../type/Todo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './type/User';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nfunction checkKey() {\n  const maxId = [...todos].sort((a, b) => b.id - a.id);\n\n  for (let i = 1; i < maxId[0].id; i += 1) {\n    if (todos.every(todo => todo.id !== i)) {\n      return i;\n    }\n  }\n\n  console.log(todos); // eslint-disable-line\n\n  return maxId[0].id + 1;\n}\n\nconst addTodo = (title: string, completed: boolean, userId: number): void => {\n  const newTodo = {\n    id: checkKey(),\n    title,\n    completed,\n    userId,\n    user: getUser(userId),\n  };\n\n  todos.push(newTodo);\n};\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n  const [completed, setCompleted] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const valueWithRules = value\n      .replace(/[!@#$%'`\";:|^&*,.\\\\<>?/()_+={\\][}-]/g, '');\n\n    setTitle(valueWithRules);\n\n    if (valueWithRules.trim() !== '') {\n      setErrorTitle(false);\n    }\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(value);\n\n    if (value !== '0') {\n      setErrorUser(false);\n    }\n  };\n\n  const handleChecked = () => {\n    setCompleted(!completed);\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim() && userId === '0') {\n      setErrorUser(true);\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (!title.trim()) {\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (userId === '0') {\n      setErrorUser(true);\n\n      return;\n    }\n\n    addTodo(title, completed, +userId);\n    setTitle('');\n    setUserId('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title title-default\">Add todo form</h1>\n\n      <form\n        className=\"box\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\">\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Title\"\n              className={classNames(\n                'input',\n                { 'is-danger': errorTitle },\n              )}\n              onChange={handleChangeTitle}\n            />\n          </label>\n          {errorTitle && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <span className=\"label\">{'User: '}</span>\n          <div\n            className={classNames(\n              'select select-default',\n              { 'is-danger': errorUser },\n            )}\n          >\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleSelectUser}\n            >\n              <option value=\"0\">Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {errorUser && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">\n            {'Completed: '}\n            <input\n              type=\"checkbox\"\n              checked={completed}\n              className=\"checkbox\"\n              onChange={handleChecked}\n            />\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}